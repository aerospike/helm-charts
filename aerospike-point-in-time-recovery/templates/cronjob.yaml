{{- if .Values.aws.ecrtokenissuer.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.aws.ecrtokenissuer.issuer.name }}-cronjob
  namespace: {{ $.Release.Namespace }}
  labels:
    helm.sh/chart: {{ printf "%s-%s" $.Chart.Name $.Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/name: "ecr-token-issuer-cronjob"
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/part-of: {{ $.Chart.Name | trunc 63 | trimSuffix "-" | quote }}

spec:
  schedule: "0 */10 * * *"
  successfulJobsHistoryLimit: 3
  startingDeadlineSeconds: 200
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Values.aws.ecrtokenissuer.issuer.name }}-serviceaccount
          containers:
            - name: {{ .Values.aws.ecrtokenissuer.issuer.name }}-cronjob
              image: {{ include "get-k8s-cli-image" . }}
              imagePullPolicy: "Always"
              envFrom:
                - secretRef:
                    name: {{ .Values.aws.ecrtokenissuer.issuer.name }}-secret
                - configMapRef:
                    name: {{ .Values.aws.ecrtokenissuer.issuer.name }}-configmap
              command:
                - /bin/sh
                - -c
                - |-
                  ECR_TOKEN=`aws ecr get-login-password --region ${AWS_REGION}`
                  kubectl delete secret --ignore-not-found $DOCKER_SECRET_NAME -n {{ $.Release.Namespace }}
                  kubectl create secret docker-registry $DOCKER_SECRET_NAME \
                  --docker-server=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com \
                  --docker-username=AWS \
                  --docker-password="${ECR_TOKEN}" \
                  --namespace={{ $.Release.Namespace }}
                  echo "Secret was successfully updated at $(date)"
          restartPolicy: Never
{{- end }}