# Default values for aerospike-backup-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: aerospike/aerospike-backup-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "2.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# the helm chart will be deployed into the default namespace if namespace is not set.
namespace: ""

configmap:
  # Specifies whether a configmap should be created with the backupServiceConfig.
  # When false the backupServiceConfig will get created in the deployment init container.
  # Set to false when needing to change the config at runtime.
  create: true

#args: ["-c", "/etc/aerospike-backup-service/aerospike-backup-service.yml", "-r"]
args: []

backupServiceConfig: {}
#  service:
#    http:
#      address: <address> # Optional default: 0.0.0.0
#      port: <port> # Optional default: 8080
#      rate:
#        tps: <tokens-per-second-threshold> # Optional default: 1024
#        size: <token=bucket-size> # Optional default: 1024
#        white-list: [ <ips> ] # Optional default: empty list
#      context-path: <custom-path-for-api-endpoints> # Optional default: "/"
#    logger:
#      level: <log-level> # Optional default: DEBUG Valid values: (TRACE,DEBUG,INFO,WARN,WARNING,ERROR)
#      format: <format> # Optional default: PLAIN Valid values: (PLAIN,JSON)
#      capture-shared: <capture-shared-lib-logs> # Optional default: false Valid Values true/false
#      stdout-writer: <true/false> # Optional default: true
#      file-writer:
#        filename: <filename-path> # Optional default: log.txt
#        maxsize: <max-logfile-size> # Optional default: 100 (Size is in megabytes)
#        maxage: <max-days-retain-logs> # Optional default: 0
#        maxbackups: <backup-logfiles> # Optional default: 0
#        compress: <true/false> # Optional default: false
#  aerospike-clusters:
#    <cluster-name>: # At least one service is required
#      label: <cluster-label> # Optional
#      seed-nodes:
#        - host-name: <cluster ip/dns-name> # Mandatory
#          port: 3000 # Mandatory
#          tls-name: <tls-socket-connection-name> # mandatiry if TLS is enabled
#      conn-timeout: <conection-timeout> # optional example: 5000
#      use-services-alternate: <true/false> # optional default: false
#      credentials:
#        user: <cluster username> # Mandatory
#        password: <cluster password> # Mandatory if  password-path is empty
#        password-path: <path-to-password-file> # Mandatory if  password is empty
#        auth-mode: <auth-mode> # Optional Valid values: INTERNAL, EXTERNAL, EXTERNAL_INSECURE, PKI
#      tls:
#        cafile: <path-to-ca-file> # Mandatory if TLS enabled and capath is empty
#        capath: <path-to-ca-dorectory> # Mandatory if TLS enabled and cafile if empty
#        name: <tls-socket-connection-name> # Mandatory if TLS enabled
#        protocols: <protocols> # Optional
#        cipher-suite: <cipher-suite> # Optional
#        keyfile: <path-to-key-file> # Optional
#        keyfile-password: <keyfile-password> # Optional
#        certfile: <path-to-certfile> # Optional
#  storage:
#    <storage-name>:
#      type: <storage-type> # Mandatory Valid values ("local" or "aws-s3")
#      path: <root-path> # Mandatory
#      s3-region: <s3-region> # Optional S3 region where the S3 backet resides
#      s3-profile: <s3-profile> # Optional AWS profile name
#      s3-endpoint-override: <s3-endpoint> # Optional alternative endpoint for the S3 SDK to communicate
#      s3-log-level: <s3-log-level> # Optional log level of the AWS S3 SDK
#  backup-policies:
#    <policy-name>:
#      parallel: <parallel> # Optional Max number of parallel scan calls default: 1
#      socket-timeout: <socket-timeout> # Optional default: 0 (Timeout is in milliseconds)
#      total-timeout: <total-timeout> # Optional default: 0 (Timeout is in milliseconds)
#      max-retries: <max-retries> # Optional Max retries before aborting the current transaction default: 0
#      retry-delay: <retry-delay> # Optional Delay before retrying default: 0 (Delay is in milliseconds)
#      remove-files: <remove-files> # Optional clean output directory default: KeepAll Valid values: (KeepAll,RemoveAll,RemoveIncremental)
#      remove-artifacts: <true/false> # Optional remove directory or remove output file defalt: false
#      no-bins: <true/false> # Optional backup only metadata (digest, TTL, generation count, key) default: false
#      no-records: <true/false> # Optional do not back up any record data (metadata or bin data) default: false
#      no-indexes: <true/false> # Optional do not back up any secondary index definitions default: false
#      no-udfs: <true/false> # Optional do not back up any UDF modules default: false
#      bandwidth: <bandwidth> # Optional throttles write operations to backup files not exceeding bandwidth in MiB/s. default: 0
#      max-records: <max-records> # Optional approximate limit for the number of records to process. default: 0
#      records-per-second: <records-per-second> # Optional limit of total returned records per second. default: 0
#      file-limit: <file-limit> # Optional .asb file size limit. default: 0
#      encryption:
#        mode: <mode> # Optional encryption mode to be used. Valid values: (NONE, AES128, AES256) default: None
#        key-file: <key-file> # Optional path to the file containing the encryption key default: ""
#        key-env: <key-env> # Optional environment variable containing the encryption key default: ""
#        key-secret: <key-secret> # Optional secret keyword in Aerospike Secret Agent containing the encryption key default: ""
#      compression:
#        mode: <mode> # Optional compression mode to be used Valid values: (NONE,ZSTD) default NONE
#        level: <level> # Optional compression level default: 0
#      sealed: <true/false> # Optional determines whether backup should include keys updated during the backup process default: false
#  backup-routines:
#    <routine-name>:
#      backup-policy: <policy-name> # Mandatory name of the corresponding backup policy
#      source-cluster: <cluster-name> # Mandatory name of the corresponding source cluste
#      storage: <storage-name> # Mandatory name of the corresponding storage provider configuration
#      secret-agent: <secret-agent> # Optional Secret Agent configuration for the routine
#      interval-cron: <interval-cron> # Mandatory interval for full backup as a cron expression string
#      incr-interval-cron: <incr-interval-cron> # Optional interval for incremental backup as a cron expression string
#      namespaces: [ <namespace-name> ] # Optional list of the namespaces to back up default: empty list
#      set-list: [ <set-names> ] # Optional list of backup set names default: empty list
#      bin-list: [ <bin-names> ] # Optional list of backup bin names default: empty list
#      prefer-racks: [ <rack-ids> ] # Optional list of rack IDs to prefer when reading records for a backup
#      partition-list: <partition-list> # Optional list of partition filters default: empty string
#  secret-agent:
#    <agent-name>:
#      address: <address> # Optional Address of the Secret Agent defaultL localhost
#      port: <port> # Optional Secret Agent port default: 8080
#      timeout: <timeout> # Optional timeout in miliseconds default: 0
#      tls-ca: <path-to-ca-file> # Optional default: ""
#      tls-enabled: <true/false> # Optional default: false



initContainers: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: &p 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: *p
  initialDelaySeconds: 15
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /ready
    port: *p
  initialDelaySeconds: 15
  periodSeconds: 10


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false


# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
extraSecretVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
