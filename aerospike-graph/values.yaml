# Default values for graphservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: aerospike/aerospike-graph-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 2.2.0

# namespaceOverride overrides the namespace, defaults to .Release.Namespace
namespaceOverride: ""

# The user should provide their credentials to pull the graph service docker image
#imagePullSecrets:
#  - name: regcred


nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

container:
  port: 8182

service:
  type: LoadBalancer
  port: 8182
  livenessProbePort: 9090
ingress:
  enabled: false
  className: ""
  annotations: {}
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/websocket-services: "websocket-service"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
  hosts: []
    # - host: graph-service.aerospike.demo
    #   paths:
    #     - path: /gremlin
    #       pathType: ImplementationSpecific
  tls: []

livenessProbe:
  port: 9090

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

initContainers: []

volumes: []
# - name: example_volume
#   secret:
#     secretName: example_secret

volumeMounts: []
# - name: example_volume_mount
#   mountPath: "/path/to/example"
#   readOnly: true

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
#env:
#  - name: aerospike.client.host
#    value: 
#  - name: aerospike.client.port
#    value: "3000"
#  - name: aerospike.client.namespace
#    value: test
