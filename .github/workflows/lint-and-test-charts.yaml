name: Lint and Test Charts

#on: pull_request
on:
  push:
    branches:
      - "VEC-430-configure-test-and-linting-for-all-helm-charts"
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.14.4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Output default branch
        run: |
          echo "Branch: ${{ github.event.repository.default_branch }}"

#      - name: Run chart-testing (lint)
#        if: steps.list-changed.outputs.changed == 'true'
#        run: ct lint --target-branch ${{ github.event.repository.default_branch }}
#
      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0

      - name: Setup Prerequisites
        run: |
          
          echo "Deploying AKO"
          curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.30.0/install.sh \
          | bash -s v0.30.0
          
          kubectl create -f https://operatorhub.io/install/aerospike-kubernetes-operator.yaml
          echo "Waiting for AKO"
          while true; do
            if kubectl --namespace operators get deployment/aerospike-operator-controller-manager &> /dev/null; then
              kubectl --namespace operators wait \
                --for=condition=available --timeout=180s deployment/aerospike-operator-controller-manager
              break
            fi
          done
          
          echo "Grant permissions to the target namespace"
          kubectl create namespace aerospike
          kubectl --namespace aerospike create serviceaccount aerospike-operator-controller-manager
          kubectl create clusterrolebinding aerospike-cluster \
            --clusterrole=aerospike-cluster --serviceaccount=aerospike:aerospike-operator-controller-manager
          
          echo "Set Secrets for Aerospike Cluster"
          kubectl --namespace aerospike create secret generic aerospike-secret \
          --from-literal=features.conf="$(echo "${{ secrets.FEATURES_CONF }}")" 

#
#      - name: Run chart-testing (install)
#        if: steps.list-changed.outputs.changed == 'true'
#        run: ct install --target-branch ${{ github.event.repository.default_branch }}